{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 Theoretical Foundation: Governing Equations of Projectile Motion 1. Introduction Projectile motion describes the motion of an object under the influence of gravity, assuming no air resistance. The motion occurs in two dimensions: horizontal ( \\(x\\) -axis) and vertical ( \\(y\\) -axis). We derive the governing equations starting from Newton\u2019s laws of motion. 2. Equations of Motion Newton\u2019s second law states: \\[F=ma\\] For projectile motion, the only force acting on the object (neglecting air resistance) is gravity: \\[F_y=-mg,\\quad F_x=0\\] Thus, the acceleration components are: \\[a_x=0,\\quad a_y=-g\\] where \\(g\\) is the acceleration due to gravity. Using kinematic equations: 2.1 Horizontal Motion Since there is no horizontal acceleration, \\[v_x=v_0\\cos(\\theta)\\] \\[x=v_0\\cos(\\theta)t\\] 2.2 Vertical Motion Using the kinematic equations for constant acceleration, \\[v_y=v_0\\sin(\\theta)-gt\\] \\[y=v_0\\sin(\\theta)t-\\frac{1}{2}gt^2\\] 3. Time of Flight The time of flight is found by solving for when the projectile returns to \\(y=0\\) : \\[0=v_0\\sin(\\theta)t-\\frac{1}{2}gt^2\\] Factoring out \\(t\\) : \\[t(v_0\\sin(\\theta)-\\frac{1}{2}gt)=0\\] Ignoring the trivial solution \\(t=0\\) , we solve for \\(t\\) : \\[t=\\frac{2v_0\\sin(\\theta)}{g}\\] 4. Range of the Projectile The horizontal range is given by: \\[R=v_x\\times t_{flight}\\] Substituting \\(v_x=v_0\\cos(\\theta)\\) and \\(t_{flight}\\) : \\[R=v_0\\cos(\\theta)\\times\\frac{2v_0\\sin(\\theta)}{g}\\] Using the identity \\(2\\sin(\\theta)\\cos(\\theta)=\\sin(2\\theta)\\) , \\[R=\\frac{v_0^2\\sin(2\\theta)}{g}\\] 5. Maximum Height At maximum height, \\(v_y=0\\) : \\[0=v_0\\sin(\\theta)-gt_{max}\\] Solving for \\(t_{max}\\) : \\[t_{max}=\\frac{v_0\\sin(\\theta)}{g}\\] Using the vertical displacement equation: \\[h_{max}=v_0\\sin(\\theta)t_{max}-\\frac{1}{2}gt_{max}^2\\] Substituting \\(t_{max}\\) : \\[h_{max}=\\frac{v_0^2\\sin^2(\\theta)}{2g}\\] 6. Influence of Initial Conditions Initial Velocity \\(v_0\\) : Higher velocity increases both range and height. Launch Angle \\(\\theta\\) : The range is maximized at \\(\\theta=45^\\circ\\) . Gravity \\(g\\) : Higher gravity decreases range and height. 7. Conclusion These equations provide a fundamental description of projectile motion. In further analysis, we will explore numerical simulations and practical applications, including air resistance and varying terrains. Analysis of the Range in Projectile Motion 1. Introduction The horizontal range of a projectile is a crucial parameter that depends on the angle of projection, initial velocity, and gravitational acceleration. Understanding these dependencies allows for optimizing projectile motion in various real-world applications. 2. Governing Equation for Range The horizontal range \\(R\\) of a projectile launched from the ground at an initial velocity \\(v_0\\) and angle \\(\\theta\\) (assuming no air resistance) is given by: \\[R=\\frac{v_0^2\\sin(2\\theta)}{g}\\] where: \\(v_0\\) is the initial velocity, \\(g\\) is the acceleration due to gravity, \\(\\theta\\) is the launch angle. 3. Dependence on the Angle of Projection The function \\(R(\\theta)\\) is determined by the term \\(\\sin(2\\theta)\\) . Since the sine function has a maximum value of 1 at \\(90^\\circ\\) , the range is maximized when: \\[2\\theta=90^\\circ \\Rightarrow \\theta=45^\\circ\\] Thus, the optimal launch angle for maximum range in an idealized scenario is \\(\\theta=45^\\circ\\) . 4. Influence of Initial Velocity Since the range equation includes \\(v_0^2\\) , increasing the initial velocity directly increases the range quadratically: \\[R \\propto v_0^2\\] For example, if the initial velocity is doubled ( \\(2v_0\\) ), the range becomes: \\[R' = \\frac{(2v_0)^2\\sin(2\\theta)}{g} = 4R\\] indicating a fourfold increase in range. 5. Effect of Gravitational Acceleration Gravity inversely affects the range: \\[R \\propto \\frac{1}{g}\\] For planets with different gravitational accelerations, the range adjusts accordingly. For example, on the Moon ( \\(g_{moon} \\approx 1.625m/s^2\\) ), the same projectile would travel approximately six times farther than on Earth ( \\(g_{earth} \\approx 9.81m/s^2\\) ). 6. Graphical Representation A plot of \\(R\\) versus \\(\\theta\\) for various values of \\(v_0\\) and \\(g\\) reveals that: The function is symmetric around \\(\\theta=45^\\circ\\) . Larger \\(v_0\\) results in a higher curve. Higher \\(g\\) compresses the range. 7. Conclusion The horizontal range is highly dependent on the launch angle, initial velocity, and gravitational acceleration. The optimal angle for maximum range is \\(45^\\circ\\) in an idealized case. However, real-world factors such as air resistance, launch height, and varying gravitational fields can alter this result. Further exploration through computational simulations can refine our understanding of projectile motion in different environments. Practical Applications of Projectile Motion 1. Introduction Projectile motion plays a fundamental role in numerous real-world scenarios, from sports to engineering and astrophysics. While the idealized equations provide valuable insights, real applications often involve additional complexities such as air resistance, varying gravitational fields, and uneven terrain. 2. Projectiles in Sports Many sports rely on projectile motion for performance optimization: Basketball: The optimal shooting angle for a free throw is approximately \\(45^\\circ\\) to \\(50^\\circ\\) , depending on player height and shot distance. Soccer: Players must account for drag and spin effects (Magnus effect) when executing curved shots. Golf: Club selection and launch angle impact the carry distance, which is influenced by wind and air resistance. 3. Engineering Applications Engineers use projectile motion principles in various fields: Ballistics: Military and defense industries design projectile trajectories considering air resistance and varying gravitational fields. Structural Engineering: Understanding projectile motion is crucial for designing protective barriers and impact-resistant structures. Water Jet Cutting: Pressurized water follows parabolic motion, requiring precise calculations for cutting efficiency. 4. Space and Astrophysics In space exploration, projectile motion extends beyond Earth's gravity: Rocket Launches: Engineers optimize launch angles and thrust to maximize efficiency while escaping Earth's gravitational pull. Asteroid Deflection: Scientists calculate the trajectory of projectiles used to alter asteroid paths. Interplanetary Travel: Orbital mechanics rely on projectile motion principles, with gravity assists optimizing fuel efficiency. 5. Projectiles on Uneven Terrain When projectiles land on uneven ground, the standard range equation requires modifications: If the projectile lands at height \\(h\\) instead of the launch height, the modified range equation is: \\[R=\\frac{v_0\\cos\\theta}{g}\\left(v_0\\sin\\theta+\\sqrt{(v_0\\sin\\theta)^2+2gh}\\right)\\] where: \\(h\\) is the final landing height, \\(g\\) is gravitational acceleration, \\(v_0\\) is initial velocity, \\(\\theta\\) is the launch angle. This formula accounts for different impact points depending on terrain elevation. 6. The Role of Air Resistance In real-world applications, air resistance significantly alters projectile trajectories. The equation of motion considering drag force is: \\[m\\frac{d^2x}{dt^2} = -kv\\frac{dx}{dt}$$ $$m\\frac{d^2y}{dt^2} = -mg - kv\\frac{dy}{dt}\\] where: \\(m\\) is the mass of the projectile, \\(k\\) is the drag coefficient, \\(v\\) is velocity. These equations require numerical solutions due to their complexity. 7. Conclusion Projectile motion is a versatile concept with applications across multiple disciplines. By incorporating factors such as air resistance, uneven terrain, and varying gravitational fields, engineers and scientists refine models for real-world accuracy. Computational simulations further enhance predictive capabilities, making projectile motion a cornerstone of physics and engineering. Python/Plot import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp def projectile_motion_no_drag(v0, theta, g=9.81): \"\"\"Computes the range of projectile motion without air resistance.\"\"\" theta_rad = np.radians(theta) range_ = (v0**2 * np.sin(2 * theta_rad)) / g return range_ def projectile_motion_with_drag(v0, theta, mass, Cd, A, rho=1.225, g=9.81): \"\"\"Solves the projectile motion equations numerically with air resistance.\"\"\" theta_rad = np.radians(theta) vx0 = v0 * np.cos(theta_rad) vy0 = v0 * np.sin(theta_rad) def equations(t, y): vx, vy, x, y_pos = y v = np.sqrt(vx**2 + vy**2) drag_force = 0.5 * rho * Cd * A * v**2 ax = -drag_force * vx / (mass * v) ay = -g - (drag_force * vy / (mass * v)) return [ax, ay, vx, vy] sol = solve_ivp(equations, [0, 10], [vx0, vy0, 0, 0], max_step=0.01, events=lambda t, y: y[3]) return sol.y[2][-1] # Return final x-position (range) def plot_range_vs_angle(v0_values, drag=False): \"\"\"Plots range vs. angle for different initial speeds.\"\"\" angles = np.linspace(0, 90, 50) plt.figure(figsize=(8, 5)) for v0 in v0_values: ranges = [] for theta in angles: if drag: range_ = projectile_motion_with_drag(v0, theta, mass=0.145, Cd=0.47, A=0.0014) else: range_ = projectile_motion_no_drag(v0, theta) ranges.append(range_) plt.plot(angles, ranges, label=f'v0 = {v0} m/s') plt.xlabel('Angle of Projection (degrees)') plt.ylabel('Range (m)') plt.title('Range vs. Angle of Projection') plt.legend() plt.grid() plt.show() # Example usage: plot_range_vs_angle([10, 20, 30], drag=False) link: colab","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#theoretical-foundation-governing-equations-of-projectile-motion","text":"","title":"Theoretical Foundation: Governing Equations of Projectile Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-introduction","text":"Projectile motion describes the motion of an object under the influence of gravity, assuming no air resistance. The motion occurs in two dimensions: horizontal ( \\(x\\) -axis) and vertical ( \\(y\\) -axis). We derive the governing equations starting from Newton\u2019s laws of motion.","title":"1. Introduction"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-equations-of-motion","text":"Newton\u2019s second law states: \\[F=ma\\] For projectile motion, the only force acting on the object (neglecting air resistance) is gravity: \\[F_y=-mg,\\quad F_x=0\\] Thus, the acceleration components are: \\[a_x=0,\\quad a_y=-g\\] where \\(g\\) is the acceleration due to gravity. Using kinematic equations:","title":"2. Equations of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#21-horizontal-motion","text":"Since there is no horizontal acceleration, \\[v_x=v_0\\cos(\\theta)\\] \\[x=v_0\\cos(\\theta)t\\]","title":"2.1 Horizontal Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#22-vertical-motion","text":"Using the kinematic equations for constant acceleration, \\[v_y=v_0\\sin(\\theta)-gt\\] \\[y=v_0\\sin(\\theta)t-\\frac{1}{2}gt^2\\]","title":"2.2 Vertical Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-time-of-flight","text":"The time of flight is found by solving for when the projectile returns to \\(y=0\\) : \\[0=v_0\\sin(\\theta)t-\\frac{1}{2}gt^2\\] Factoring out \\(t\\) : \\[t(v_0\\sin(\\theta)-\\frac{1}{2}gt)=0\\] Ignoring the trivial solution \\(t=0\\) , we solve for \\(t\\) : \\[t=\\frac{2v_0\\sin(\\theta)}{g}\\]","title":"3. Time of Flight"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-range-of-the-projectile","text":"The horizontal range is given by: \\[R=v_x\\times t_{flight}\\] Substituting \\(v_x=v_0\\cos(\\theta)\\) and \\(t_{flight}\\) : \\[R=v_0\\cos(\\theta)\\times\\frac{2v_0\\sin(\\theta)}{g}\\] Using the identity \\(2\\sin(\\theta)\\cos(\\theta)=\\sin(2\\theta)\\) , \\[R=\\frac{v_0^2\\sin(2\\theta)}{g}\\]","title":"4. Range of the Projectile"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#5-maximum-height","text":"At maximum height, \\(v_y=0\\) : \\[0=v_0\\sin(\\theta)-gt_{max}\\] Solving for \\(t_{max}\\) : \\[t_{max}=\\frac{v_0\\sin(\\theta)}{g}\\] Using the vertical displacement equation: \\[h_{max}=v_0\\sin(\\theta)t_{max}-\\frac{1}{2}gt_{max}^2\\] Substituting \\(t_{max}\\) : \\[h_{max}=\\frac{v_0^2\\sin^2(\\theta)}{2g}\\]","title":"5. Maximum Height"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#6-influence-of-initial-conditions","text":"Initial Velocity \\(v_0\\) : Higher velocity increases both range and height. Launch Angle \\(\\theta\\) : The range is maximized at \\(\\theta=45^\\circ\\) . Gravity \\(g\\) : Higher gravity decreases range and height.","title":"6. Influence of Initial Conditions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#7-conclusion","text":"These equations provide a fundamental description of projectile motion. In further analysis, we will explore numerical simulations and practical applications, including air resistance and varying terrains.","title":"7. Conclusion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#analysis-of-the-range-in-projectile-motion","text":"","title":"Analysis of the Range in Projectile Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-introduction_1","text":"The horizontal range of a projectile is a crucial parameter that depends on the angle of projection, initial velocity, and gravitational acceleration. Understanding these dependencies allows for optimizing projectile motion in various real-world applications.","title":"1. Introduction"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-governing-equation-for-range","text":"The horizontal range \\(R\\) of a projectile launched from the ground at an initial velocity \\(v_0\\) and angle \\(\\theta\\) (assuming no air resistance) is given by: \\[R=\\frac{v_0^2\\sin(2\\theta)}{g}\\] where: \\(v_0\\) is the initial velocity, \\(g\\) is the acceleration due to gravity, \\(\\theta\\) is the launch angle.","title":"2. Governing Equation for Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-dependence-on-the-angle-of-projection","text":"The function \\(R(\\theta)\\) is determined by the term \\(\\sin(2\\theta)\\) . Since the sine function has a maximum value of 1 at \\(90^\\circ\\) , the range is maximized when: \\[2\\theta=90^\\circ \\Rightarrow \\theta=45^\\circ\\] Thus, the optimal launch angle for maximum range in an idealized scenario is \\(\\theta=45^\\circ\\) .","title":"3. Dependence on the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-influence-of-initial-velocity","text":"Since the range equation includes \\(v_0^2\\) , increasing the initial velocity directly increases the range quadratically: \\[R \\propto v_0^2\\] For example, if the initial velocity is doubled ( \\(2v_0\\) ), the range becomes: \\[R' = \\frac{(2v_0)^2\\sin(2\\theta)}{g} = 4R\\] indicating a fourfold increase in range.","title":"4. Influence of Initial Velocity"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#5-effect-of-gravitational-acceleration","text":"Gravity inversely affects the range: \\[R \\propto \\frac{1}{g}\\] For planets with different gravitational accelerations, the range adjusts accordingly. For example, on the Moon ( \\(g_{moon} \\approx 1.625m/s^2\\) ), the same projectile would travel approximately six times farther than on Earth ( \\(g_{earth} \\approx 9.81m/s^2\\) ).","title":"5. Effect of Gravitational Acceleration"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#6-graphical-representation","text":"A plot of \\(R\\) versus \\(\\theta\\) for various values of \\(v_0\\) and \\(g\\) reveals that: The function is symmetric around \\(\\theta=45^\\circ\\) . Larger \\(v_0\\) results in a higher curve. Higher \\(g\\) compresses the range.","title":"6. Graphical Representation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#7-conclusion_1","text":"The horizontal range is highly dependent on the launch angle, initial velocity, and gravitational acceleration. The optimal angle for maximum range is \\(45^\\circ\\) in an idealized case. However, real-world factors such as air resistance, launch height, and varying gravitational fields can alter this result. Further exploration through computational simulations can refine our understanding of projectile motion in different environments.","title":"7. Conclusion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#practical-applications-of-projectile-motion","text":"","title":"Practical Applications of Projectile Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-introduction_2","text":"Projectile motion plays a fundamental role in numerous real-world scenarios, from sports to engineering and astrophysics. While the idealized equations provide valuable insights, real applications often involve additional complexities such as air resistance, varying gravitational fields, and uneven terrain.","title":"1. Introduction"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-projectiles-in-sports","text":"Many sports rely on projectile motion for performance optimization: Basketball: The optimal shooting angle for a free throw is approximately \\(45^\\circ\\) to \\(50^\\circ\\) , depending on player height and shot distance. Soccer: Players must account for drag and spin effects (Magnus effect) when executing curved shots. Golf: Club selection and launch angle impact the carry distance, which is influenced by wind and air resistance.","title":"2. Projectiles in Sports"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-engineering-applications","text":"Engineers use projectile motion principles in various fields: Ballistics: Military and defense industries design projectile trajectories considering air resistance and varying gravitational fields. Structural Engineering: Understanding projectile motion is crucial for designing protective barriers and impact-resistant structures. Water Jet Cutting: Pressurized water follows parabolic motion, requiring precise calculations for cutting efficiency.","title":"3. Engineering Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-space-and-astrophysics","text":"In space exploration, projectile motion extends beyond Earth's gravity: Rocket Launches: Engineers optimize launch angles and thrust to maximize efficiency while escaping Earth's gravitational pull. Asteroid Deflection: Scientists calculate the trajectory of projectiles used to alter asteroid paths. Interplanetary Travel: Orbital mechanics rely on projectile motion principles, with gravity assists optimizing fuel efficiency.","title":"4. Space and Astrophysics"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#5-projectiles-on-uneven-terrain","text":"When projectiles land on uneven ground, the standard range equation requires modifications: If the projectile lands at height \\(h\\) instead of the launch height, the modified range equation is: \\[R=\\frac{v_0\\cos\\theta}{g}\\left(v_0\\sin\\theta+\\sqrt{(v_0\\sin\\theta)^2+2gh}\\right)\\] where: \\(h\\) is the final landing height, \\(g\\) is gravitational acceleration, \\(v_0\\) is initial velocity, \\(\\theta\\) is the launch angle. This formula accounts for different impact points depending on terrain elevation.","title":"5. Projectiles on Uneven Terrain"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#6-the-role-of-air-resistance","text":"In real-world applications, air resistance significantly alters projectile trajectories. The equation of motion considering drag force is: \\[m\\frac{d^2x}{dt^2} = -kv\\frac{dx}{dt}$$ $$m\\frac{d^2y}{dt^2} = -mg - kv\\frac{dy}{dt}\\] where: \\(m\\) is the mass of the projectile, \\(k\\) is the drag coefficient, \\(v\\) is velocity. These equations require numerical solutions due to their complexity.","title":"6. The Role of Air Resistance"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#7-conclusion_2","text":"Projectile motion is a versatile concept with applications across multiple disciplines. By incorporating factors such as air resistance, uneven terrain, and varying gravitational fields, engineers and scientists refine models for real-world accuracy. Computational simulations further enhance predictive capabilities, making projectile motion a cornerstone of physics and engineering.","title":"7. Conclusion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#pythonplot","text":"import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp def projectile_motion_no_drag(v0, theta, g=9.81): \"\"\"Computes the range of projectile motion without air resistance.\"\"\" theta_rad = np.radians(theta) range_ = (v0**2 * np.sin(2 * theta_rad)) / g return range_ def projectile_motion_with_drag(v0, theta, mass, Cd, A, rho=1.225, g=9.81): \"\"\"Solves the projectile motion equations numerically with air resistance.\"\"\" theta_rad = np.radians(theta) vx0 = v0 * np.cos(theta_rad) vy0 = v0 * np.sin(theta_rad) def equations(t, y): vx, vy, x, y_pos = y v = np.sqrt(vx**2 + vy**2) drag_force = 0.5 * rho * Cd * A * v**2 ax = -drag_force * vx / (mass * v) ay = -g - (drag_force * vy / (mass * v)) return [ax, ay, vx, vy] sol = solve_ivp(equations, [0, 10], [vx0, vy0, 0, 0], max_step=0.01, events=lambda t, y: y[3]) return sol.y[2][-1] # Return final x-position (range) def plot_range_vs_angle(v0_values, drag=False): \"\"\"Plots range vs. angle for different initial speeds.\"\"\" angles = np.linspace(0, 90, 50) plt.figure(figsize=(8, 5)) for v0 in v0_values: ranges = [] for theta in angles: if drag: range_ = projectile_motion_with_drag(v0, theta, mass=0.145, Cd=0.47, A=0.0014) else: range_ = projectile_motion_no_drag(v0, theta) ranges.append(range_) plt.plot(angles, ranges, label=f'v0 = {v0} m/s') plt.xlabel('Angle of Projection (degrees)') plt.ylabel('Range (m)') plt.title('Range vs. Angle of Projection') plt.legend() plt.grid() plt.show() # Example usage: plot_range_vs_angle([10, 20, 30], drag=False) link: colab","title":"Python/Plot"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 Theoretical Foundation of the Forced Damped Pendulum 1. Governing Differential Equation The motion of a forced damped pendulum is described by the second-order nonlinear differential equation: \\[\\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L}\\sin\\theta = A\\cos(\\omega t)\\] Where: \\(\\theta\\) is the angular displacement, \\(b\\) is the damping coefficient, \\(g\\) is the acceleration due to gravity, \\(L\\) is the length of the pendulum, \\(A\\) is the amplitude of the external driving force, \\(\\omega\\) is the driving frequency. 2. Approximate Solutions for Small-Angle Oscillations For small oscillations ( \\(\\theta \\approx 0\\) ), we use the small-angle approximation: \\[\\sin\\theta \\approx \\theta\\] Thus, the governing equation simplifies to: \\[\\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L}\\theta = A\\cos(\\omega t)\\] This is a linear nonhomogeneous differential equation, which has the general solution: \\[\\theta(t) = \\theta_h(t) + \\theta_p(t)\\] where: \\(\\theta_h(t)\\) is the solution to the homogeneous equation: \\[\\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L}\\theta = 0\\] which yields: \\[\\theta_h(t) = e^{-\\frac{b}{2}t} \\left(C_1\\cos(\\omega_0 t) + C_2\\sin(\\omega_0 t)\\right)\\] where \\(\\omega_0 = \\sqrt{\\frac{g}{L} - \\frac{b^2}{4}}\\) . \\(\\theta_p(t)\\) is a particular solution due to the external forcing term: \\[\\theta_p(t) = \\frac{A}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (b\\omega)^2}} \\cos(\\omega t - \\phi)\\] where the phase shift \\(\\phi\\) is given by: \\[ \\tan\\phi = \\frac{b \\cdot \\omega}{\\omega_0^2 - \\omega^2} \\] 3. Resonance Conditions and Energy Considerations Resonance occurs when the driving frequency \\(\\omega\\) is close to the natural frequency of the system. The natural frequency (in the absence of damping) is given by: \\[\\omega_0 = \\sqrt{\\frac{g}{L}}\\] For weak damping ( \\(b \\ll 1\\) ), resonance approximately occurs when: \\[\\omega \\approx \\omega_0\\] At resonance, the amplitude of oscillations becomes large, leading to significant energy absorption by the system. The total energy of the system consists of kinetic and potential energy: Kinetic Energy: \\( \\(KE = \\frac{1}{2}mL^2\\left(\\frac{d\\theta}{dt}\\right)^2\\) \\) Potential Energy: \\[PE = mgL(1 - \\cos\\theta)\\] The total energy: \\[E = KE + PE\\] Oscillates over time, with damping causing a gradual decay unless sustained by external forcing. 4. Conclusion The forced damped pendulum exhibits complex dynamics, ranging from periodic motion to chaotic behavior, depending on the values of \\(b, A, \\omega\\) . Further analysis will involve numerical simulations and graphical representations of phase space and resonance conditions.","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#theoretical-foundation-of-the-forced-damped-pendulum","text":"","title":"Theoretical Foundation of the Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-governing-differential-equation","text":"The motion of a forced damped pendulum is described by the second-order nonlinear differential equation: \\[\\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L}\\sin\\theta = A\\cos(\\omega t)\\] Where: \\(\\theta\\) is the angular displacement, \\(b\\) is the damping coefficient, \\(g\\) is the acceleration due to gravity, \\(L\\) is the length of the pendulum, \\(A\\) is the amplitude of the external driving force, \\(\\omega\\) is the driving frequency.","title":"1. Governing Differential Equation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-approximate-solutions-for-small-angle-oscillations","text":"For small oscillations ( \\(\\theta \\approx 0\\) ), we use the small-angle approximation: \\[\\sin\\theta \\approx \\theta\\] Thus, the governing equation simplifies to: \\[\\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L}\\theta = A\\cos(\\omega t)\\] This is a linear nonhomogeneous differential equation, which has the general solution: \\[\\theta(t) = \\theta_h(t) + \\theta_p(t)\\] where: \\(\\theta_h(t)\\) is the solution to the homogeneous equation: \\[\\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L}\\theta = 0\\] which yields: \\[\\theta_h(t) = e^{-\\frac{b}{2}t} \\left(C_1\\cos(\\omega_0 t) + C_2\\sin(\\omega_0 t)\\right)\\] where \\(\\omega_0 = \\sqrt{\\frac{g}{L} - \\frac{b^2}{4}}\\) . \\(\\theta_p(t)\\) is a particular solution due to the external forcing term: \\[\\theta_p(t) = \\frac{A}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (b\\omega)^2}} \\cos(\\omega t - \\phi)\\] where the phase shift \\(\\phi\\) is given by: \\[ \\tan\\phi = \\frac{b \\cdot \\omega}{\\omega_0^2 - \\omega^2} \\]","title":"2. Approximate Solutions for Small-Angle Oscillations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-resonance-conditions-and-energy-considerations","text":"Resonance occurs when the driving frequency \\(\\omega\\) is close to the natural frequency of the system. The natural frequency (in the absence of damping) is given by: \\[\\omega_0 = \\sqrt{\\frac{g}{L}}\\] For weak damping ( \\(b \\ll 1\\) ), resonance approximately occurs when: \\[\\omega \\approx \\omega_0\\] At resonance, the amplitude of oscillations becomes large, leading to significant energy absorption by the system. The total energy of the system consists of kinetic and potential energy: Kinetic Energy: \\( \\(KE = \\frac{1}{2}mL^2\\left(\\frac{d\\theta}{dt}\\right)^2\\) \\) Potential Energy: \\[PE = mgL(1 - \\cos\\theta)\\] The total energy: \\[E = KE + PE\\] Oscillates over time, with damping causing a gradual decay unless sustained by external forcing.","title":"3. Resonance Conditions and Energy Considerations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-conclusion","text":"The forced damped pendulum exhibits complex dynamics, ranging from periodic motion to chaotic behavior, depending on the values of \\(b, A, \\omega\\) . Further analysis will involve numerical simulations and graphical representations of phase space and resonance conditions.","title":"4. Conclusion"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1 Wave Interference Patterns on a Water Surface 1. Selecting a Regular Polygon Introduction In wave physics, interference occurs when two or more waves overlap, resulting in regions of constructive and destructive interference. To systematically analyze these patterns, we consider multiple point wave sources positioned at the vertices of a regular polygon . This setup allows us to explore how symmetric arrangements of sources influence the resulting wave field. Mathematical Definition of a Regular Polygon A regular polygon with \\(N\\) sides is a closed geometric figure where all sides are of equal length and all internal angles are equal. The vertices of such a polygon, when inscribed in a circle of radius \\(R\\) , can be determined using trigonometric functions. For a polygon centered at the origin, the coordinates of the \\(i\\) -th vertex are given by: \\[x_i=R\\cos\\left(\\frac{2\\pi i}{N}\\right),\\quad y_i=R\\sin\\left(\\frac{2\\pi i}{N}\\right),\\quad i=0,1,2,\\dots,N-1\\] where: - \\(R\\) is the circumradius of the polygon, - \\(N\\) is the number of sides (hence, the number of sources), - \\(i\\) indexes the vertices counterclockwise starting from an initial reference point. Choosing the Regular Polygon The choice of \\(N\\) influences the symmetry of the interference pattern. Common selections include: - Equilateral Triangle ( \\(N=3\\) ) : Yields a threefold symmetric interference pattern. - Square ( \\(N=4\\) ) : Produces a fourfold symmetric pattern with central and diagonal wave reinforcements. - Pentagon ( \\(N=5\\) ) : Generates more complex wave interactions with fivefold rotational symmetry. - Hexagon ( \\(N=6\\) ) : Approximates circular symmetry while retaining noticeable interference fringes. 2. Positioning the Sources Determining the Coordinates of the Polygonal Vertices To systematically analyze interference, we must precisely position the wave sources at the vertices of a chosen regular polygon. Given a polygon inscribed within a circle of radius \\(R\\) , the coordinates of its vertices are: \\[x_i=R\\cos\\left(\\frac{2\\pi i}{N}\\right),\\quad y_i=R\\sin\\left(\\frac{2\\pi i}{N}\\right),\\quad i=0,1,2,\\dots,N-1\\] Assigning Each Vertex as a Wave Source Each vertex serves as a point source emitting circular waves with identical amplitude and frequency. The total wave field results from the superposition of these waves. Each wave propagates outward from its source with a displacement function: \\[\\eta_i(x,y,t)=\\frac{A}{r_i}\\cos\\left(kr_i-\\omega t+\\phi_i\\right)\\] where: - \\(r_i=\\sqrt{(x-x_i)^2+(y-y_i)^2}\\) is the radial distance to the observation point. 3. Defining the Wave Equations Mathematical Representation of Wave Motion Each wave emitted from a point source follows the equation: \\[\\eta_i(x,y,t)=\\frac{A}{r_i}\\cos\\left(kr_i-\\omega t+\\phi_i\\right)\\] where: - \\(A\\) is the amplitude, - \\(k=\\frac{2\\pi}{\\lambda}\\) is the wave number, - \\(\\omega=2\\pi f\\) is the angular frequency, - \\(\\phi_i\\) is the phase, - \\(r_i\\) is the radial distance from the \\(i\\) -th source. Uniformity Assumptions To maintain coherence in interference analysis, we assume: - All waves have the same amplitude , i.e., \\(A\\) is constant. - All waves have the same wavelength \\(\\lambda\\) and frequency \\(f\\) . - Initial phase differences between sources remain fixed. 4. Applying the Superposition Principle Summation of Wave Displacements According to the principle of superposition, the resultant displacement at any point on the water surface is the sum of individual wave contributions: \\[\\eta_{\\text{sum}}(x,y,t)=\\sum_{i=1}^{N}\\eta_i(x,y,t)\\] This summation captures constructive and destructive interference effects. Constructive and Destructive Interference Conditions Constructive interference: Occurs when phase differences satisfy: \\( \\(kr_i-\\omega t+\\phi_i=2m\\pi,\\quad m\\in\\mathbb{Z}\\) \\) Destructive interference: Occurs when phase differences satisfy: \\( \\(kr_i-\\omega t+\\phi_i=(2m+1)\\pi,\\quad m\\in\\mathbb{Z}\\) \\) 5. Analyzing the Interference Patterns Identifying Interference Zones By computing \\(\\eta_{\\text{sum}}(x,y,t)\\) , we can classify different regions: - High amplitude zones: Result from constructive interference. - Low amplitude zones: Result from destructive interference. Temporal Evolution of the Pattern As time progresses, the interference pattern evolves dynamically, influenced by wave frequency and phase differences. 6. Visualization and Simulation Graphical Representations Using numerical simulations, we generate: - Static interference maps for different polygons. - Time-evolving wave fields to observe changing interference dynamics. Python Implementation A Python script implementing the above equations will: 1. Define wave parameters. 2. Compute the interference pattern on a 2D grid. 3. Visualize results using heatmaps and contour plots. The next step is to implement and analyze these interference patterns computationally. Python/Models import numpy as np import matplotlib.pyplot as plt from mpl_toolkits.mplot3d import Axes3D # Define parameters wavelength = 1.0 # Wavelength of the waves k = 2 * np.pi / wavelength # Wave number d = 5.0 # Distance between sources amplitude = 1.0 # Amplitude of waves # Create a grid x = np.linspace(-10, 10, 400) y = np.linspace(-10, 10, 400) X, Y = np.meshgrid(x, y) # Calculate distances from two point sources r1 = np.sqrt((X - d/2)**2 + Y**2) r2 = np.sqrt((X + d/2)**2 + Y**2) # Calculate wave interference pattern wave1 = amplitude * np.cos(k * r1) wave2 = amplitude * np.cos(k * r2) interference = wave1 + wave2 # 2D Heatmap plt.figure(figsize=(8, 6)) plt.imshow(interference, extent=[-10, 10, -10, 10], origin='lower', cmap='jet', alpha=0.8) plt.colorbar(label=\"Wave Displacement\") plt.title(\"2D Interference Pattern\") plt.xlabel(\"X Position\") plt.ylabel(\"Y Position\") plt.show() # 3D Surface Plot fig = plt.figure(figsize=(10, 7)) ax = fig.add_subplot(111, projection='3d') ax.plot_surface(X, Y, interference, cmap='jet', edgecolor='none', alpha=0.8) ax.set_title(\"3D Surface Plot of Interference Pattern\") ax.set_xlabel(\"X Position\") ax.set_ylabel(\"Y Position\") ax.set_zlabel(\"Wave Displacement\") plt.show() Colab","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#wave-interference-patterns-on-a-water-surface","text":"","title":"Wave Interference Patterns on a Water Surface"},{"location":"1%20Physics/3%20Waves/Problem_1/#1-selecting-a-regular-polygon","text":"","title":"1. Selecting a Regular Polygon"},{"location":"1%20Physics/3%20Waves/Problem_1/#introduction","text":"In wave physics, interference occurs when two or more waves overlap, resulting in regions of constructive and destructive interference. To systematically analyze these patterns, we consider multiple point wave sources positioned at the vertices of a regular polygon . This setup allows us to explore how symmetric arrangements of sources influence the resulting wave field.","title":"Introduction"},{"location":"1%20Physics/3%20Waves/Problem_1/#mathematical-definition-of-a-regular-polygon","text":"A regular polygon with \\(N\\) sides is a closed geometric figure where all sides are of equal length and all internal angles are equal. The vertices of such a polygon, when inscribed in a circle of radius \\(R\\) , can be determined using trigonometric functions. For a polygon centered at the origin, the coordinates of the \\(i\\) -th vertex are given by: \\[x_i=R\\cos\\left(\\frac{2\\pi i}{N}\\right),\\quad y_i=R\\sin\\left(\\frac{2\\pi i}{N}\\right),\\quad i=0,1,2,\\dots,N-1\\] where: - \\(R\\) is the circumradius of the polygon, - \\(N\\) is the number of sides (hence, the number of sources), - \\(i\\) indexes the vertices counterclockwise starting from an initial reference point.","title":"Mathematical Definition of a Regular Polygon"},{"location":"1%20Physics/3%20Waves/Problem_1/#choosing-the-regular-polygon","text":"The choice of \\(N\\) influences the symmetry of the interference pattern. Common selections include: - Equilateral Triangle ( \\(N=3\\) ) : Yields a threefold symmetric interference pattern. - Square ( \\(N=4\\) ) : Produces a fourfold symmetric pattern with central and diagonal wave reinforcements. - Pentagon ( \\(N=5\\) ) : Generates more complex wave interactions with fivefold rotational symmetry. - Hexagon ( \\(N=6\\) ) : Approximates circular symmetry while retaining noticeable interference fringes.","title":"Choosing the Regular Polygon"},{"location":"1%20Physics/3%20Waves/Problem_1/#2-positioning-the-sources","text":"","title":"2. Positioning the Sources"},{"location":"1%20Physics/3%20Waves/Problem_1/#determining-the-coordinates-of-the-polygonal-vertices","text":"To systematically analyze interference, we must precisely position the wave sources at the vertices of a chosen regular polygon. Given a polygon inscribed within a circle of radius \\(R\\) , the coordinates of its vertices are: \\[x_i=R\\cos\\left(\\frac{2\\pi i}{N}\\right),\\quad y_i=R\\sin\\left(\\frac{2\\pi i}{N}\\right),\\quad i=0,1,2,\\dots,N-1\\]","title":"Determining the Coordinates of the Polygonal Vertices"},{"location":"1%20Physics/3%20Waves/Problem_1/#assigning-each-vertex-as-a-wave-source","text":"Each vertex serves as a point source emitting circular waves with identical amplitude and frequency. The total wave field results from the superposition of these waves. Each wave propagates outward from its source with a displacement function: \\[\\eta_i(x,y,t)=\\frac{A}{r_i}\\cos\\left(kr_i-\\omega t+\\phi_i\\right)\\] where: - \\(r_i=\\sqrt{(x-x_i)^2+(y-y_i)^2}\\) is the radial distance to the observation point.","title":"Assigning Each Vertex as a Wave Source"},{"location":"1%20Physics/3%20Waves/Problem_1/#3-defining-the-wave-equations","text":"","title":"3. Defining the Wave Equations"},{"location":"1%20Physics/3%20Waves/Problem_1/#mathematical-representation-of-wave-motion","text":"Each wave emitted from a point source follows the equation: \\[\\eta_i(x,y,t)=\\frac{A}{r_i}\\cos\\left(kr_i-\\omega t+\\phi_i\\right)\\] where: - \\(A\\) is the amplitude, - \\(k=\\frac{2\\pi}{\\lambda}\\) is the wave number, - \\(\\omega=2\\pi f\\) is the angular frequency, - \\(\\phi_i\\) is the phase, - \\(r_i\\) is the radial distance from the \\(i\\) -th source.","title":"Mathematical Representation of Wave Motion"},{"location":"1%20Physics/3%20Waves/Problem_1/#uniformity-assumptions","text":"To maintain coherence in interference analysis, we assume: - All waves have the same amplitude , i.e., \\(A\\) is constant. - All waves have the same wavelength \\(\\lambda\\) and frequency \\(f\\) . - Initial phase differences between sources remain fixed.","title":"Uniformity Assumptions"},{"location":"1%20Physics/3%20Waves/Problem_1/#4-applying-the-superposition-principle","text":"","title":"4. Applying the Superposition Principle"},{"location":"1%20Physics/3%20Waves/Problem_1/#summation-of-wave-displacements","text":"According to the principle of superposition, the resultant displacement at any point on the water surface is the sum of individual wave contributions: \\[\\eta_{\\text{sum}}(x,y,t)=\\sum_{i=1}^{N}\\eta_i(x,y,t)\\] This summation captures constructive and destructive interference effects.","title":"Summation of Wave Displacements"},{"location":"1%20Physics/3%20Waves/Problem_1/#constructive-and-destructive-interference-conditions","text":"Constructive interference: Occurs when phase differences satisfy: \\( \\(kr_i-\\omega t+\\phi_i=2m\\pi,\\quad m\\in\\mathbb{Z}\\) \\) Destructive interference: Occurs when phase differences satisfy: \\( \\(kr_i-\\omega t+\\phi_i=(2m+1)\\pi,\\quad m\\in\\mathbb{Z}\\) \\)","title":"Constructive and Destructive Interference Conditions"},{"location":"1%20Physics/3%20Waves/Problem_1/#5-analyzing-the-interference-patterns","text":"","title":"5. Analyzing the Interference Patterns"},{"location":"1%20Physics/3%20Waves/Problem_1/#identifying-interference-zones","text":"By computing \\(\\eta_{\\text{sum}}(x,y,t)\\) , we can classify different regions: - High amplitude zones: Result from constructive interference. - Low amplitude zones: Result from destructive interference.","title":"Identifying Interference Zones"},{"location":"1%20Physics/3%20Waves/Problem_1/#temporal-evolution-of-the-pattern","text":"As time progresses, the interference pattern evolves dynamically, influenced by wave frequency and phase differences.","title":"Temporal Evolution of the Pattern"},{"location":"1%20Physics/3%20Waves/Problem_1/#6-visualization-and-simulation","text":"","title":"6. Visualization and Simulation"},{"location":"1%20Physics/3%20Waves/Problem_1/#graphical-representations","text":"Using numerical simulations, we generate: - Static interference maps for different polygons. - Time-evolving wave fields to observe changing interference dynamics.","title":"Graphical Representations"},{"location":"1%20Physics/3%20Waves/Problem_1/#python-implementation","text":"A Python script implementing the above equations will: 1. Define wave parameters. 2. Compute the interference pattern on a 2D grid. 3. Visualize results using heatmaps and contour plots. The next step is to implement and analyze these interference patterns computationally.","title":"Python Implementation"},{"location":"1%20Physics/3%20Waves/Problem_1/#pythonmodels","text":"import numpy as np import matplotlib.pyplot as plt from mpl_toolkits.mplot3d import Axes3D # Define parameters wavelength = 1.0 # Wavelength of the waves k = 2 * np.pi / wavelength # Wave number d = 5.0 # Distance between sources amplitude = 1.0 # Amplitude of waves # Create a grid x = np.linspace(-10, 10, 400) y = np.linspace(-10, 10, 400) X, Y = np.meshgrid(x, y) # Calculate distances from two point sources r1 = np.sqrt((X - d/2)**2 + Y**2) r2 = np.sqrt((X + d/2)**2 + Y**2) # Calculate wave interference pattern wave1 = amplitude * np.cos(k * r1) wave2 = amplitude * np.cos(k * r2) interference = wave1 + wave2 # 2D Heatmap plt.figure(figsize=(8, 6)) plt.imshow(interference, extent=[-10, 10, -10, 10], origin='lower', cmap='jet', alpha=0.8) plt.colorbar(label=\"Wave Displacement\") plt.title(\"2D Interference Pattern\") plt.xlabel(\"X Position\") plt.ylabel(\"Y Position\") plt.show() # 3D Surface Plot fig = plt.figure(figsize=(10, 7)) ax = fig.add_subplot(111, projection='3d') ax.plot_surface(X, Y, interference, cmap='jet', edgecolor='none', alpha=0.8) ax.set_title(\"3D Surface Plot of Interference Pattern\") ax.set_xlabel(\"X Position\") ax.set_ylabel(\"Y Position\") ax.set_zlabel(\"Wave Displacement\") plt.show() Colab","title":"Python/Models"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}